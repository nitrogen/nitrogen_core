# vim: ts=3 sw=3 et ft=org
#+TITLE: Textbox Autocomplete Element
#+STYLE: <LINK href='../stylesheet.css' rel='stylesheet' type='text/css' />
#+AUTHOR: Jesse Gumm (@jessegumm)
#+OPTIONS:   H:2 num:1 toc:1 \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+EMAIL: 
#+TEXT: [[http://nitrogenproject.com][Home]] | [[file:../index.org][Getting Started]] | [[file:../api.org][API]] | [[file:../elements.org][*Elements*]] | [[file:../actions.org][Actions]] | [[file:../validators.org][Validators]] | [[file:../handlers.org][Handlers]] | [[file:../config.org][Configuration Options]] | [[file:../plugins.org][Plugins]] | [[file:../jquery_mobile_integration.org][Mobile]] | [[file:../troubleshooting.org][Troubleshooting]] | [[file:../about.org][About]]

* Textbox Autocomplete Element - #textbox\_autocomplete {}

  The textbox\_autocomplete element produces an HTML textbox with built-in
  autocomplete functionality through the use of server postbacks for selecting
  and element and typing an element

** Usage

#+BEGIN_SRC erlang
   #textbox_autocomplete { tag=lookup }
#+END_SRC

** Events

#+BEGIN_SRC erlang
   autocomplete_enter_event(SearchTerm, Tag) ->
      _JsonString = some_search_function(SearchTerm),
      
   autocomplete_select_event({struct, [{<<"id">>,ID }, {<<"value">>, Value}]}, Tag) ->
      wf:flash(wf:f("Selected ~p:~p",[ID, Value])).  
#+END_SRC

** Core Attributes

   Core attributes copied from [[file:./textbox.org][#textbox{}]]

** Attributes

   + tag (/Erlang Term/) :: The tag to be passed to the
      =autocomplete_enter_event= and =autocomplete_select_event= functions.

** See Also

   + [[./base.html][base element]]

   + [[./button.html][button element]]

   + [[./textbox.html][textbox element]]

   + [[./textarea.html][textarea element]]

   + [[./checkbox.html][checkbox element]]

   + [[./dropdown.html][dropdown element]]

   + [[./option.html][option element]]

   + [[http://nitrogenproject.com/demos/textbox_autocomplete][Textbox Autocomplete Demo]]
 
